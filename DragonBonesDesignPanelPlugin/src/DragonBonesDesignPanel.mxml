<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:core="core.*"
			   xmlns:designPanel="designPanel.*"
			   xmlns:designPanelView="designPanelPlugin.view.*"
			   xmlns:component="designPanelPlugin.view.component.*"
			   xmlns:local="*"
			   fontSize="12"
			   applicationComplete="applicationCompleteHandler()" xmlns:view="plugin.view.*"
			   >
	<fx:Metadata>
		[ResourceBundle("resources")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import cloud.GA.DBGATrackerManager;
			
			import core.SettingManager;
			import core.events.ControllerEvent;
			import core.model.vo.ImportVO;
			import core.utils.GlobalConstValues;
			
			import dragonBones.core.DragonBones;
			
			import plugin.view.ExportWindow;
			import plugin.view.ImportWindow;
			import plugin.view.TextureAtlasWindow;
			import plugin.view.XMLWindow;
			
			[Bindable]
			private var _settingManager:SettingManager = SettingManager.getInstance();
			
			private function applicationCompleteHandler():void
			{
				this.stage.frameRate = 60;
				
				DBGATrackerManager.createDBGATracker(this);
				DBGATrackerManager.trackPageview("/");
				DBGATrackerManager.trackEvent("Version", "Version:" + String(getVersionNumber()));
				
				var data:String = this.stage.loaderInfo.parameters["data"];
				if(data)
				{
					var importVO:ImportVO = new ImportVO();
					_settingManager.setImportVOValues(importVO);
					importVO.url = data;
					importVO.importType = GlobalConstValues.IMPORT_TYPE_EXPORTED;
					importVO.isToMerge = false;
					
					armaturesPanelDispatchEvent(new ControllerEvent(ControllerEvent.IMPORT_FILE, importVO));
				}
			}
			
			private function menuClickHandler(e:Event):void
			{
				switch (e.target)
				{
					case buttonImport:
						var importWindow:ImportWindow = new ImportWindow();
						importWindow.shareConfig = armaturesPanel.shareConfig;
						importWindow.showWindow(this);
						break;
					
					case buttonExport:
						var exportWindow:ExportWindow = new ExportWindow();
						exportWindow.shareConfig = armaturesPanel.shareConfig;
						exportWindow.showWindow(this);
						break;
					
					case buttonTextureAtlas:
						var textureAtlasWindow:TextureAtlasWindow = new TextureAtlasWindow();
						textureAtlasWindow.shareConfig = armaturesPanel.shareConfig;
						textureAtlasWindow.showWindow(this, true);
						break;
					
					case buttonXML:
						var xmlWindow:XMLWindow = new XMLWindow();
						xmlWindow.shareConfig = armaturesPanel.shareConfig;
						xmlWindow.showWindow(this, true);
						break;
				}
			}
			
			private function armaturesPanelDispatchEvent(e:Event):void
			{
				armaturesPanel.shareConfig.dispatcher.dispatchEvent(e);
			}
			
			private function getVersionNumber():Number
			{
				var outputVersionNumber:int = 0;
				var versionArray:Array = DragonBones.VERSION.split(".");
				
				for(var i:int=0; i < versionArray.length; i++)
				{
					outputVersionNumber += versionArray[i] * Math.pow(100, versionArray.length - i - 1);
				}
				
				return outputVersionNumber;
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" gap="10" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
		<s:HGroup width="100%" gap="10">
			<s:Button id="buttonImport" height="24" cornerRadius="0" 
					  label="{resourceManager.getString('resources', 'import')}" 
					  click="menuClickHandler(event)"
					  />
			<s:Button id="buttonExport" height="24" cornerRadius="0" 
					  label="{resourceManager.getString('resources', 'export')}"
					  click="menuClickHandler(event)"
					  />
			<s:Button id="buttonTextureAtlas" height="24" cornerRadius="0" 
					  label="{resourceManager.getString('resources', 'textureAtlas')}" 
					  click="menuClickHandler(event)"
					  />
			<s:Button id="buttonXML" height="24" cornerRadius="0" 
					  label="{resourceManager.getString('resources', 'xml')}" 
					  click="menuClickHandler(event)"
					  />
			
			<s:Spacer width="100%"/>
			
			<s:DropDownList width="100" height="24" cornerRadius="0" textAlign="right" 
							dataProvider="{_settingManager.languageAC}" 
							selectedIndex="@{_settingManager.languageIndex}"
							/>
		</s:HGroup>
		
		<view:ArmaturesPanel width="100%" height="100%"
			id="armaturesPanel" 
			/>
		
	</s:VGroup>
	
</s:Application>
